name: Results1
inputs:
- {name: acc_linear_svc}
- {name: acc_log}
- {name: acc_random_forest}
- {name: acc_gaussian}
- {name: acc_decision_tree}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - "def results1(acc_linear_svc, acc_log, acc_random_forest, acc_gaussian, acc_decision_tree):\n\
      \    import numpy as np\n    import pandas as pd\n    from sklearn import linear_model\n\
      \    from sklearn.linear_model import LogisticRegression\n    from sklearn.ensemble\
      \ import RandomForestClassifier\n    from sklearn.linear_model import Perceptron\n\
      \    from sklearn.linear_model import SGDClassifier\n    from sklearn.tree import\
      \ DecisionTreeClassifier\n    from sklearn.neighbors import KNeighborsClassifier\n\
      \    from sklearn.svm import SVC\n    from sklearn.naive_bayes import GaussianNB\
      \     \n    results = pd.DataFrame({\n        'Model': ['Support Vector Machines',\
      \ 'logistic Regression',\n                'Random Forest', 'Naive Bayes', 'Decision\
      \ Tree'],\n        'Score': [acc_linear_svc, acc_log,\n                acc_random_forest,\
      \ acc_gaussian, acc_decision_tree]})\n    result_df = results.sort_values(by='Score',\
      \ ascending=False)\n    result_df = result_df.set_index('Score')\n    print(result_df)\n\
      \nimport argparse\n_parser = argparse.ArgumentParser(prog='Results1', description='')\n\
      _parser.add_argument(\"--acc-linear-svc\", dest=\"acc_linear_svc\", type=str,\
      \ required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"--acc-log\"\
      , dest=\"acc_log\", type=str, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"\
      --acc-random-forest\", dest=\"acc_random_forest\", type=str, required=True,\
      \ default=argparse.SUPPRESS)\n_parser.add_argument(\"--acc-gaussian\", dest=\"\
      acc_gaussian\", type=str, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"\
      --acc-decision-tree\", dest=\"acc_decision_tree\", type=str, required=True,\
      \ default=argparse.SUPPRESS)\n_parsed_args = vars(_parser.parse_args())\n\n\
      _outputs = results1(**_parsed_args)\n"
    args:
    - --acc-linear-svc
    - {inputValue: acc_linear_svc}
    - --acc-log
    - {inputValue: acc_log}
    - --acc-random-forest
    - {inputValue: acc_random_forest}
    - --acc-gaussian
    - {inputValue: acc_gaussian}
    - --acc-decision-tree
    - {inputValue: acc_decision_tree}
